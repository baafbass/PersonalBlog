// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalBlog.Data.Concrete.EntityFramework.Contexts;

namespace PersonalBlog.Data.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.AboutMe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Birthday")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CV")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JobIcon")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("profilPicture")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.ToTable("AboutMe");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Birthday = "31.08.2001",
                            CV = "",
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 859, DateTimeKind.Local).AddTicks(6564),
                            FirstName = "Abdoul Faride",
                            IsActive = false,
                            IsDeleted = false,
                            Job = "Software Developer",
                            JobIcon = "<i class=\"fa - solid fa - laptop - code\"></i>",
                            LastName = "Bassirou Alzouma",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 859, DateTimeKind.Local).AddTicks(6599),
                            profilPicture = ""
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SQAnswers")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SecurityQuestions")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 848, DateTimeKind.Local).AddTicks(9551),
                            Email = "abdoulfaridbassirou7898@gmai.com",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 848, DateTimeKind.Local).AddTicks(9592),
                            Password = "3a799ade3169bd0d5da32652a3a888c5",
                            SQAnswers = "a453e0ac9f56a805e5249ffdf7d04847",
                            SecurityQuestions = "What is your father name"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Articles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SeoTags")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Categories", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryImg")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Comments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("ID");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.ContactInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("ContactInfo");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "Arif Nihat Asya Erkek Öğrenci Yurdu",
                            City = "Sakarya/Serdiven",
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 784, DateTimeKind.Local).AddTicks(3057),
                            Email = "abdoulfaridbassirou7898@gmail.com",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 784, DateTimeKind.Local).AddTicks(3097),
                            phoneNumber = "+905315058891"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.ContactMe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAdress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("ContactMe");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 811, DateTimeKind.Local).AddTicks(5572),
                            EmailAdress = "abdoulfaridbassirou7898@gmail.com",
                            FirstName = "Abdoul Faride",
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Bassirou Alzouma",
                            Message = "I will become a high value man and rich",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 811, DateTimeKind.Local).AddTicks(5614),
                            Subject = "Business"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Education", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GradePointAverage")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("educationTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Education");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 775, DateTimeKind.Local).AddTicks(7873),
                            Description = "We are learning programming and a litle of business",
                            Duration = "Oct.2021-Today",
                            GradePointAverage = "3.19/4",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 775, DateTimeKind.Local).AddTicks(7909),
                            School = "University Of Sakarya",
                            educationTitle = "License-Information System Engineering"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Experiences", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("experienceTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("jobPosition")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Experiences");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 766, DateTimeKind.Local).AddTicks(681),
                            Description = "Hardening System-Gone Phishing-Protection of keys-Analyze and Recommendations",
                            Duration = "February",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 766, DateTimeKind.Local).AddTicks(722),
                            experienceTitle = "Cybersecurity Virtual Internship",
                            jobPosition = "Cyber Security Analyst"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Hobbies", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("hobbies")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("ID");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 757, DateTimeKind.Local).AddTicks(2316),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 757, DateTimeKind.Local).AddTicks(2359),
                            hobbies = "Learning new technologies"
                        },
                        new
                        {
                            ID = 2,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 757, DateTimeKind.Local).AddTicks(3961),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 757, DateTimeKind.Local).AddTicks(3966),
                            hobbies = "Playing Football"
                        },
                        new
                        {
                            ID = 3,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 757, DateTimeKind.Local).AddTicks(3981),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 757, DateTimeKind.Local).AddTicks(3985),
                            hobbies = "Reading books"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.HomePageSliders", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortContent")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("HomePageSliders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Content = "",
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 750, DateTimeKind.Local).AddTicks(6444),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 750, DateTimeKind.Local).AddTicks(6695),
                            ShortContent = "My name is Abdoul Faride Bassirou Alzouma. I am from Niger and I am 21 years old. After graduating from high school, I had the chance to pursue my educational adventure in Turkey, where I am currently studying Information System Engineering at Sakarya University. I am very interested in science and technology, and I also have the ability to speak five different languages: English, French, Turkish, Hausa, and Zarma.",
                            Title = "Software Developer"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Site", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LogoTitle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("siteKeywords")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("siteName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Site");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 742, DateTimeKind.Local).AddTicks(810),
                            Description = "Abdoul Faride Bassirou Alzouma Software Developer",
                            IsActive = false,
                            IsDeleted = false,
                            Logo = "<i class=\"fa - solid fa - display - code\"></i>",
                            LogoTitle = "Farid Bass",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 742, DateTimeKind.Local).AddTicks(848),
                            siteKeywords = "C#,.NET,WEB,SOFTWARE",
                            siteName = "BAAF"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Skills", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ID");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 732, DateTimeKind.Local).AddTicks(3470),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 732, DateTimeKind.Local).AddTicks(3510),
                            Percentage = 90,
                            SkillName = "C#"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.SocialMedias", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MediaLogo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MediaName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MediaURL")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("SocialMedias");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 723, DateTimeKind.Local).AddTicks(9165),
                            IsActive = false,
                            IsDeleted = false,
                            MediaLogo = "<i class=\"fa - brands fa - facebook\"></i>",
                            MediaName = "Facebook",
                            MediaURL = "https://www.facebook.com/baaf.baaf.7",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 723, DateTimeKind.Local).AddTicks(9203)
                        },
                        new
                        {
                            ID = 2,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 724, DateTimeKind.Local).AddTicks(2463),
                            IsActive = false,
                            IsDeleted = false,
                            MediaLogo = "<i class=\"fa - brands fa - linkedin\"></i>",
                            MediaName = "LinkedIn",
                            MediaURL = "https://www.linkedin.com/in/abdoul-faride-bassirou-alzouma-a61b321bb/",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 724, DateTimeKind.Local).AddTicks(2468)
                        },
                        new
                        {
                            ID = 3,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 724, DateTimeKind.Local).AddTicks(2485),
                            IsActive = false,
                            IsDeleted = false,
                            MediaLogo = "<i class=\"fa - brands fa - instagram\"></i>",
                            MediaName = "Instagram",
                            MediaURL = "https://www.instagram.com/farid_bass_alz/",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 724, DateTimeKind.Local).AddTicks(2489)
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Summary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Summary");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Content = "Welcome to my blog! I am a second-year Information System Engineering student who is passionate about software development. Currently, I am working on improving my skills in C# and .Net technologies by building projects. I also have experience with HTML, CSS, and JavaScript and have completed many projects using C and C++ languages. As a big fan of cybersecurity, I am very attentive to security during the software development process.",
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2023, 3, 21, 20, 32, 59, 710, DateTimeKind.Local).AddTicks(2625),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2023, 3, 21, 20, 32, 59, 710, DateTimeKind.Local).AddTicks(4109)
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Articles", b =>
                {
                    b.HasOne("PersonalBlog.Entities.Concrete.Categories", "Categories")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Comments", b =>
                {
                    b.HasOne("PersonalBlog.Entities.Concrete.Articles", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Articles", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Categories", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
